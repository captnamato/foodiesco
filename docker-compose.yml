services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: foodiesco-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: foodiesco
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - foodiesco-network

  # Backend API
  backend:
    build:
      context: ./foodies-backend
      dockerfile: Dockerfile
    container_name: foodiesco-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://foodiesco:foodiesco123@mongodb:27017/foodiesco?authSource=foodiesco
      - JWT_SECRET=your-super-secret-jwt-key-for-development
      - CLIENT_URL=http://localhost:3000
      - CLOUDINARY_CLOUD_NAME=your-cloudinary-cloud-name
      - CLOUDINARY_API_KEY=your-cloudinary-api-key
      - CLOUDINARY_API_SECRET=your-cloudinary-api-secret
    volumes:
      - ./foodies-backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
    networks:
      - foodiesco-network
    command: npm run dev

  # Frontend (Development)
  frontend:
    build:
      context: ./foodies-frontend
      dockerfile: Dockerfile.dev
    container_name: foodiesco-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./foodies-frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - foodiesco-network
    stdin_open: true
    tty: true

  # Frontend (Production build for testing)
  frontend-prod:
    build:
      context: ./foodies-frontend
      dockerfile: Dockerfile
    container_name: foodiesco-frontend-prod
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - foodiesco-network
    profiles:
      - production

volumes:
  mongodb_data:

networks:
  foodiesco-network:
    driver: bridge